{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","selectTodo","selectedTodoId","filter","onLoading","light","useCallback","text","regexp","RegExp","matchValue","match","split","map","symbol","index","array","length","matchSymbol","shift","className","hightlight","todo","id","completed","title","type","onClick","TodoFilter","value","filterType","onChange","event","selectFilter","target","placeholder","query","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","userFromServer","finally","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","filteredType","setFilteredType","setQuery","todosFromServer","queryTodos","toLowerCase","includes","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.613f5671.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\n\nfunction hightlight(filter: string, text: string) {\n  if (!filter) {\n    return text;\n  }\n\n  const regexp = new RegExp(filter, 'ig');\n  const matchValue = text.match(regexp);\n\n  if (matchValue) {\n    return text.split(regexp).map((symbol, index, array) => {\n      if (index < array.length - 1) {\n        const matchSymbol = matchValue.shift();\n\n        return (\n          <>\n            {symbol}\n            <span className=\"hightlight\">{matchSymbol}</span>\n          </>\n        );\n      }\n\n      return symbol;\n    });\n  }\n\n  return text;\n}\n\ntype Props = {\n  selectTodo: (todo: Todo) => void;\n  todos: Todo[];\n  selectedTodoId: number | null;\n  filter: string;\n  onLoading: boolean;\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    selectTodo,\n    selectedTodoId,\n    filter,\n    onLoading,\n  } = props;\n\n  const light = useCallback((text: string) => {\n    return hightlight(filter, text);\n  }, [filter]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      {onLoading\n        ? <h3 className=\"Loading\">Loading...</h3>\n        : (\n          <thead>\n            {todos.length > 0\n              ? (\n                <tr>\n                  <th>#</th>\n                  <th>\n                    <span className=\"icon\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </th>\n                  <th>Title</th>\n                  <th> </th>\n                </tr>\n              )\n              : <h3 className=\"Loading\">No todos for your search query :( </h3>}\n\n          </thead>\n        )}\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {light(todo.title)}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={todo.id === selectedTodoId\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  onChange: (query: string) => void;\n  query: string;\n  selectFilter: (filter: Filter) => void;\n  filterType: Filter;\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={props.filterType}\n          onChange={(event) => props.selectFilter(event.target.value as Filter)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={props.query}\n        onChange={(event) => props.onChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => props.onChange('')}\n        />\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  closeModal: (id: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { todo, closeModal } = props;\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(todo.userId)\n      .then(userFromServer => setUser(userFromServer))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filteredType, setFilteredType] = useState<Filter>('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodos = (filterType: Filter): Todo[] => {\n    return todos.filter(todo => {\n      const queryTodos = todo.title.toLowerCase().includes(query.trim().toLowerCase());\n\n      switch (filterType) {\n        case 'all':\n          return queryTodos;\n        case 'active':\n          return queryTodos && !todo.completed;\n        case 'completed':\n          return queryTodos && todo.completed;\n        default:\n          return true;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChange={setQuery}\n                query={query}\n                selectFilter={setFilteredType}\n                filterType={filteredType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={filteredTodos(filteredType)}\n                selectTodo={setSelectedTodo}\n                selectedTodoId={selectedTodo?.id || null}\n                filter={query}\n                onLoading={isLoading}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && <TodoModal todo={selectedTodo} closeModal={setSelectedTodo} />}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}